# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  deploy:
    machine:
      enabled: true
    steps:
      - run:
          name: deploy over SSH
          command: |
            echo here we would ssh $SSH_USER@$SSH_HOST

  build:
    docker:
      # specify the version you desire here
      - image: david101011/bytelion-circleci-ruby
        environment:
            CANVAS_LMS_ADMIN_EMAIL: matt.bee@bytelion.com
            CANVAS_LMS_ADMIN_PASSWORD: VlMjAwMjk2ZWFjMj
            CANVAS_LMS_ACCOUNT_NAME: ByteLionTest
            CANVAS_LMS_STATS_COLLECTION: opt_out

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:9.5
        environment: 
            POSTGRES_USER: circleci
            POSTGRES_DB: canvas_development

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run:
          name: set configuration
          command: |
            mv -v ~/repo/config/database.yml.example ~/repo/config/database.yml
            mv -v ~/repo/config/security.yml.example ~/repo/config/security.yml
            mv -v ~/repo/config/domain.yml.example ~/repo/config/domain.yml
      - run: bundle exec rake canvas:compile_assets
      - run: bundle exec rake db:create
      - run: bundle exec rails db:initial_setup

      # run tests!
      - run:
          name: run tests
          command: |
            RAILS_ENV=test bundle install
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: stable
