# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: david101011/bytelion-circleci-ruby
        environment:
            CANVAS_LMS_ADMIN_EMAIL: matt.bee@bytelion.com
            CANVAS_LMS_ADMIN_PASSWORD: VlMjAwMjk2ZWFjMj
            CANVAS_LMS_ACCOUNT_NAME: ByteLionTest
            CANVAS_LMS_STATS_COLLECTION: opt_out

      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: canvas_development

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run:
          name: set configuration
          command: |
            mv -v ~/repo/config/database.yml.example ~/repo/config/database.yml
            mv -v ~/repo/config/security.yml.example ~/repo/config/security.yml
            mv -v ~/repo/config/domain.yml.example ~/repo/config/domain.yml
      - run: bundle exec rake canvas:compile_assets
      - run: bundle exec rake db:create
      - run: bundle exec rails db:initial_setup

  deploy-dev:
    machine:
      enabled: true
    working_directory: ~/repo
    steps:
      - checkout
      - add_ssh_keys
      - run:
          name: Add AWS EC2 To Known Hosts
          command: ssh-keyscan -H $SERVER_HOST_DEV >> ~/.ssh/known_hosts
      - run:
          name: AWS EC2 Deploy
          command: |
            SSH_HOST=${SERVER_HOST_DEV}
            ssh $SSH_NAME@$SSH_HOST "./deploy.sh development"
  deploy-test:
    machine:
      enabled: true
    working_directory: ~/repo
    steps:
      - checkout
      - add_ssh_keys
      - run:
          name: Add AWS EC2 To Known Hosts
          command: ssh-keyscan -H $SERVER_HOST_TEST >> ~/.ssh/known_hosts
      - run:
          name: AWS EC2 Deploy
          command: |
            SSH_HOST=${SERVER_HOST_TEST}
            ssh $SSH_NAME@$SSH_HOST "./deploy.sh test"
  deploy-prod:
    machine:
      enabled: true
    working_directory: ~/repo
    steps:
      - checkout
      - add_ssh_keys
      - run:
          name: Add AWS EC2 To Known Hosts
          command: ssh-keyscan -H $SERVER_HOST_PROD >> ~/.ssh/known_hosts
      - run:
          name: AWS EC2 Deploy
          command: |
            SSH_HOST=${SERVER_HOST_PROD}
            ssh $SSH_NAME@$SSH_HOST "./deploy.sh stable"
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy-dev:
          requires:
              - build
          filters:
            branches:
              only: development
      - deploy-test:
          requires:
              - build
          filters:
            branches:
              only: test
      - deploy-prod:
          requires:
            - build
          filters:
            branches:
              only: stable
